name: Release workflow
on:
    push:
      # Sequence of patterns matched against refs/tags
      tags:
      - '*' # Push events to matching *, i.e. 1.0, 20.15.10
jobs:
    build:
      name: Upload Release Asset
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Use Node.js 14.x
          uses: actions/setup-node@v1
          with:
            node-version: 14.x
        - name: Build project # This would actually build your project, using zip for an example artifact
          run: npm ci && npm run build --if-present
        - name: Rename build folder
          run: mv build indahouse
        - name: Compress to ZIP
          run: zip -qq -r build.zip indahouse
        - uses: actions/upload-artifact@v2
          with:
            name: theme-zip
            path: build.zip
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ./build.zip
            asset_name: indahouse.${{ steps.create_release.outputs.tag_name }}.zip
            asset_content_type: application/zip
